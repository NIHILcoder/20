@startuml VisioMera Evolution - Структура проекта

' Настройка стилей
skinparam componentStyle rectangle
skinparam backgroundColor white
skinparam ArrowColor #333333
skinparam ComponentBackgroundColor #f0f0f0
skinparam PackageBackgroundColor #e0e0e0
skinparam PackageBorderColor #999999
skinparam ComponentBorderColor #666666
skinparam TitleFontSize 20
skinparam TitleFontColor #333333
skinparam DefaultFontSize 12

title VisioMera Evolution - Структура проекта

' Определение пакетов для основных разделов
package "Страницы (app)" as Pages {
  component "Главная (page.tsx)" as HomePage
  component "Сообщество (community/page.tsx)" as CommunityPage
  component "Избранное (favorites/page.tsx)" as FavoritesPage
  component "История (history/page.tsx)" as HistoryPage
  component "Профиль (profile/page.tsx)" as ProfilePage
  component "Настройки (settings/page.tsx)" as SettingsPage
  component "Вход (login/page.tsx)" as LoginPage
  component "Промпты (prompts/page.tsx)" as PromptsPage
  component "Обучение (learning/page.tsx)" as LearningPage
  component "О нас (about/page.tsx)" as AboutPage
}

package "Компоненты (components)" as Components {
  ' Основные компоненты
  component "Улучшенная форма генерации\n(improved-generation-form.tsx)" as ImprovedGenerationForm
  component "Фон с частицами\n(enhanced-particles-background.tsx)" as EnhancedParticlesBackground
  component "Боковая панель\n(app-sidebar.tsx)" as AppSidebar
  component "Нижняя навигация\n(bottom-nav.tsx)" as BottomNav
  component "Заголовок\n(header.tsx)" as Header
  
  ' Компоненты для сообщества
  package "Компоненты сообщества" as CommunityComponents {
    component "Сетка работ\n(community/artwork-grid.tsx)" as ArtworkGrid
    component "Фильтры сообщества\n(community/community-filters.tsx)" as CommunityFilters
    component "Турниры\n(community/tournaments.tsx)" as Tournaments
    component "Коллаборации\n(community/collaborations.tsx)" as Collaborations
  }
  
  ' Компоненты для избранного
  package "Компоненты избранного" as FavoritesComponents {
    component "Сетка коллекций\n(favorites/collections-grid.tsx)" as CollectionsGrid
    component "Элементы коллекции\n(favorites/collection-items.tsx)" as CollectionItems
  }
  
  ' Компоненты для истории
  package "Компоненты истории" as HistoryComponents {
    component "Список истории\n(history/history-list.tsx)" as HistoryList
    component "Статистика генерации\n(generation-statistics.tsx)" as GenerationStatistics
  }
  
  ' Компоненты для промптов
  package "Компоненты промптов" as PromptsComponents {
    component "Секция комментариев\n(prompts/comments-section.tsx)" as CommentsSection
    component "Иерархические категории\n(prompts/hierarchical-categories.tsx)" as HierarchicalCategories
    component "Бесконечная прокрутка\n(prompts/infinite-scroll.tsx)" as InfiniteScroll
    component "Коллекции промптов\n(prompts/prompt-collections.tsx)" as PromptCollections
    component "Комментарии к промптам\n(prompts/prompt-comments.tsx)" as PromptComments
    component "Селектор тегов\n(prompts/tags-selector.tsx)" as TagsSelector
  }
  
  ' UI компоненты
  package "UI компоненты" as UIComponents {
    component "Кнопка (ui/button.tsx)" as Button
    component "Карточка (ui/card.tsx)" as Card
    component "Вкладки (ui/tabs.tsx)" as Tabs
    component "Диалог (ui/dialog.tsx)" as Dialog
    component "Выпадающее меню (ui/dropdown-menu.tsx)" as DropdownMenu
    component "Ввод (ui/input.tsx)" as Input
    ' ... и другие UI компоненты
  }
  
  ' Контексты
  package "Контексты" as Contexts {
    component "Контекст авторизации\n(auth-context.tsx)" as AuthContext
    component "Контекст языка\n(language-context.tsx)" as LanguageContext
    component "Провайдер темы\n(theme-provider.tsx)" as ThemeProvider
  }
}

package "API (app/api)" as API {
  component "Авторизация (auth/)" as AuthAPI
  component "Коллекции (collection/)" as CollectionAPI
  component "Элементы коллекций (collection-items/)" as CollectionItemsAPI
  component "Сообщество (community/)" as CommunityAPI
  component "Избранное (favorites/)" as FavoritesAPI
  component "История (history/)" as HistoryAPI
  component "Промпты (prompts/)" as PromptsAPI
  component "Статистика (statistics/)" as StatisticsAPI
  component "Подписки (subscription/)" as SubscriptionAPI
  component "Пользователи (user/)" as UserAPI
}

package "Модели (models)" as Models {
  component "Пользователь (user.js)" as UserModel
  component "Работа (artwork.js)" as ArtworkModel
  component "Коллекция (collection.js)" as CollectionModel
  component "Коллаборация (collaboration.js)" as CollaborationModel
  component "Турнир (tournament.js)" as TournamentModel
}

package "Сервисы (services)" as Services {
  component "API сервис (api-service.ts)" as APIService
  component "Сервис промптов (prompts-service.ts)" as PromptsService
  component "Сервис пользователей (user-service.ts)" as UserService
}

' Связи между страницами и компонентами
HomePage --> ImprovedGenerationForm
HomePage --> EnhancedParticlesBackground

CommunityPage --> ArtworkGrid
CommunityPage --> CommunityFilters
CommunityPage --> Tournaments
CommunityPage --> Collaborations
CommunityPage --> EnhancedParticlesBackground

FavoritesPage --> CollectionsGrid
FavoritesPage --> CollectionItems
FavoritesPage --> ParticlesBackground

HistoryPage --> HistoryList
HistoryPage --> GenerationStatistics
HistoryPage --> ParticlesBackground

ProfilePage --> ParticlesBackground

' Связи с контекстами
HomePage --> LanguageContext
CommunityPage --> LanguageContext
FavoritesPage --> LanguageContext
FavoritesPage --> AuthContext
HistoryPage --> LanguageContext
HistoryPage --> AuthContext
ProfilePage --> LanguageContext
ProfilePage --> AuthContext

' Связи с API
CommunityPage --> CommunityAPI
FavoritesPage --> FavoritesAPI
HistoryPage --> HistoryAPI
ProfilePage --> UserAPI

' Связи с моделями
CommunityAPI --> ArtworkModel
CommunityAPI --> UserModel
CommunityAPI --> TournamentModel
CommunityAPI --> CollaborationModel
FavoritesAPI --> CollectionModel
HistoryAPI --> ArtworkModel
UserAPI --> UserModel

' Связи с сервисами
CommunityPage --> APIService
FavoritesPage --> APIService
HistoryPage --> APIService
ProfilePage --> UserService

@enduml